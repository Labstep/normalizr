function t(t, e) {
  for (var n = 0; n < e.length; n++) {
    var r = e[n];
    (r.enumerable = r.enumerable || !1),
      (r.configurable = !0),
      'value' in r && (r.writable = !0),
      Object.defineProperty(t, r.key, r);
  }
}
function e(e, n, r) {
  return n && t(e.prototype, n), r && t(e, r), e;
}
function n(t, e, n) {
  return (
    e in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : (t[e] = n), t
  );
}
function r(t) {
  for (var e = 1; e < arguments.length; e++) {
    var r = null != arguments[e] ? arguments[e] : {},
      i = Object.keys(r);
    'function' == typeof Object.getOwnPropertySymbols &&
      (i = i.concat(
        Object.getOwnPropertySymbols(r).filter(function(t) {
          return Object.getOwnPropertyDescriptor(r, t).enumerable;
        })
      )),
      i.forEach(function(e) {
        n(t, e, r[e]);
      });
  }
  return t;
}
function i(t, e) {
  (t.prototype = Object.create(e.prototype)), (t.prototype.constructor = t), (t.__proto__ = e);
}
function o(t) {
  return !(
    !t ||
    'function' != typeof t.hasOwnProperty ||
    !(t.hasOwnProperty('__ownerID') || (t._map && t._map.hasOwnProperty('__ownerID')))
  );
}
function u(t, e, n) {
  return Object.keys(t).reduce(function(e, r) {
    var i = '' + r;
    return e.has(i) ? e.set(i, n(e.get(i), t[i])) : e;
  }, e);
}
var a = function(t) {
    return function(e) {
      return o(e) ? e.get(t) : e[t];
    };
  },
  c = (function() {
    function t(t, e, n) {
      if ((void 0 === e && (e = {}), void 0 === n && (n = {}), !t || 'string' != typeof t))
        throw new Error('Expected a string key for Entity, but found ' + t + '.');
      var i = n,
        o = i.idAttribute,
        u = void 0 === o ? 'id' : o,
        c = i.mergeStrategy,
        f =
          void 0 === c
            ? function(t, e) {
                return r({}, t, e);
              }
            : c,
        s = i.processStrategy,
        h =
          void 0 === s
            ? function(t) {
                return r({}, t);
              }
            : s;
      (this._key = t),
        (this._getId = 'function' == typeof u ? u : a(u)),
        (this._idAttribute = u),
        (this._mergeStrategy = f),
        (this._processStrategy = h),
        this.define(e);
    }
    var n = t.prototype;
    return (
      (n.define = function(t) {
        this.schema = Object.keys(t).reduce(function(e, n) {
          var i,
            o = t[n];
          return r({}, e, (((i = {})[n] = o), i));
        }, this.schema || {});
      }),
      (n.getId = function(t, e, n) {
        return this._getId(t, e, n);
      }),
      (n.merge = function(t, e) {
        return this._mergeStrategy(t, e);
      }),
      (n.normalize = function(t, e, n, r, i, o) {
        var u = this,
          a = this.getId(t, e, n),
          c = this.key;
        if (
          (c in o || (o[c] = {}),
          a in o[c] || (o[c][a] = []),
          o[c][a].some(function(e) {
            return e === t;
          }))
        )
          return a;
        o[c][a].push(t);
        var f = this._processStrategy(t, e, n);
        return (
          Object.keys(this.schema).forEach(function(t) {
            if (f.hasOwnProperty(t) && 'object' == typeof f[t]) {
              var e = u.schema[t];
              f[t] = r(f[t], f, t, e, i, o);
            }
          }),
          i(this, f, t, e, n),
          a
        );
      }),
      (n.denormalize = function(t, e) {
        var n = this;
        return o(t)
          ? u(this.schema, t, e)
          : (Object.keys(this.schema).forEach(function(r) {
              if (t.hasOwnProperty(r)) {
                var i = n.schema[r];
                t[r] = e(t[r], i);
              }
            }),
            t);
      }),
      e(t, [
        {
          key: 'key',
          get: function() {
            return this._key;
          }
        },
        {
          key: 'idAttribute',
          get: function() {
            return this._idAttribute;
          }
        }
      ]),
      t
    );
  })(),
  f = (function() {
    function t(t, e) {
      e &&
        (this._schemaAttribute =
          'string' == typeof e
            ? function(t) {
                return t[e];
              }
            : e),
        this.define(t);
    }
    var n = t.prototype;
    return (
      (n.define = function(t) {
        this.schema = t;
      }),
      (n.getSchemaAttribute = function(t, e, n) {
        return !this.isSingleSchema && this._schemaAttribute(t, e, n);
      }),
      (n.inferSchema = function(t, e, n) {
        if (this.isSingleSchema) return this.schema;
        var r = this.getSchemaAttribute(t, e, n);
        return this.schema[r];
      }),
      (n.normalizeValue = function(t, e, n, r, i, o) {
        var u = this.inferSchema(t, e, n);
        if (!u) return t;
        var a = r(t, e, n, u, i, o);
        return this.isSingleSchema || null == a ? a : { id: a, schema: this.getSchemaAttribute(t, e, n) };
      }),
      (n.denormalizeValue = function(t, e) {
        var n = o(t) ? t.get('schema') : t.schema;
        return this.isSingleSchema || n
          ? e((o(t) ? t.get('id') : t.id) || t, this.isSingleSchema ? this.schema : this.schema[n])
          : t;
      }),
      e(t, [
        {
          key: 'isSingleSchema',
          get: function() {
            return !this._schemaAttribute;
          }
        }
      ]),
      t
    );
  })(),
  s = (function(t) {
    function e(e, n) {
      if (!n) throw new Error('Expected option "schemaAttribute" not found on UnionSchema.');
      return t.call(this, e, n) || this;
    }
    i(e, t);
    var n = e.prototype;
    return (
      (n.normalize = function(t, e, n, r, i, o) {
        return this.normalizeValue(t, e, n, r, i, o);
      }),
      (n.denormalize = function(t, e) {
        return this.denormalizeValue(t, e);
      }),
      e
    );
  })(f),
  h = (function(t) {
    function e() {
      return t.apply(this, arguments) || this;
    }
    i(e, t);
    var n = e.prototype;
    return (
      (n.normalize = function(t, e, n, i, o, u) {
        var a = this;
        return Object.keys(t).reduce(function(e, n, c) {
          var f,
            s = t[n];
          return null != s ? r({}, e, (((f = {})[n] = a.normalizeValue(s, t, n, i, o, u)), f)) : e;
        }, {});
      }),
      (n.denormalize = function(t, e) {
        var n = this;
        return Object.keys(t).reduce(function(i, o) {
          var u,
            a = t[o];
          return r({}, i, (((u = {})[o] = n.denormalizeValue(a, e)), u));
        }, {});
      }),
      e
    );
  })(f),
  y = function(t) {
    if (Array.isArray(t) && t.length > 1)
      throw new Error('Expected schema definition to be a single schema, but found ' + t.length + '.');
    return t[0];
  },
  l = function(t) {
    return Array.isArray(t)
      ? t
      : Object.keys(t).map(function(e) {
          return t[e];
        });
  },
  m = function(t, e, n, r, i, o, u) {
    return (
      (t = y(t)),
      l(e).map(function(e, a) {
        return i(e, n, r, t, o, u);
      })
    );
  },
  p = function(t, e, n) {
    return (
      (t = y(t)),
      e && e.map
        ? e.map(function(e) {
            return n(e, t);
          })
        : e
    );
  },
  d = (function(t) {
    function e() {
      return t.apply(this, arguments) || this;
    }
    i(e, t);
    var n = e.prototype;
    return (
      (n.normalize = function(t, e, n, r, i, o) {
        var u = this;
        return l(t)
          .map(function(t, a) {
            return u.normalizeValue(t, e, n, r, i, o);
          })
          .filter(function(t) {
            return null != t;
          });
      }),
      (n.denormalize = function(t, e) {
        var n = this;
        return t && t.map
          ? t.map(function(t) {
              return n.denormalizeValue(t, e);
            })
          : t;
      }),
      e
    );
  })(f),
  v = function(t, e, n, i, o, u, a) {
    var c = r({}, e);
    return (
      Object.keys(t).forEach(function(n) {
        var r = t[n],
          i = o(e[n], e, n, r, u, a);
        null == i ? delete c[n] : (c[n] = i);
      }),
      c
    );
  },
  b = function(t, e, n) {
    if (o(e)) return u(t, e, n);
    var i = r({}, e);
    return (
      Object.keys(t).forEach(function(e) {
        null != i[e] && (i[e] = n(i[e], t[e]));
      }),
      i
    );
  },
  g = function t(e, n, r, i, o, u) {
    return 'object' == typeof e && e
      ? 'object' != typeof i || (i.normalize && 'function' == typeof i.normalize)
        ? i.normalize(e, n, r, t, o, u)
        : (Array.isArray(i) ? m : v)(i, e, n, r, t, o, u)
      : e;
  },
  k = {
    Array: d,
    Entity: c,
    Object: (function() {
      function t(t) {
        this.define(t);
      }
      var e = t.prototype;
      return (
        (e.define = function(t) {
          this.schema = Object.keys(t).reduce(function(e, n) {
            var i,
              o = t[n];
            return r({}, e, (((i = {})[n] = o), i));
          }, this.schema || {});
        }),
        (e.normalize = function() {
          for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) e[n] = arguments[n];
          return v.apply(void 0, [this.schema].concat(e));
        }),
        (e.denormalize = function() {
          for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++) e[n] = arguments[n];
          return b.apply(void 0, [this.schema].concat(e));
        }),
        t
      );
    })(),
    Union: s,
    Values: h
  },
  z = function(t, e) {
    if (!t || 'object' != typeof t)
      throw new Error('Unexpected input given to normalize. Expected type to be "object", found "' + typeof t + '".');
    var n = {},
      r = (function(t) {
        return function(e, n, r, i, o) {
          var u = e.key,
            a = e.getId(r, i, o);
          u in t || (t[u] = {});
          var c = t[u][a];
          t[u][a] = c ? e.merge(c, n) : n;
        };
      })(n);
    return { entities: n, result: g(t, t, null, e, r, {}) };
  },
  j = function(t) {
    var e = {},
      n = O(t);
    return function t(i, u) {
      return 'object' != typeof u || (u.denormalize && 'function' == typeof u.denormalize)
        ? null == i
          ? i
          : u instanceof c
          ? (function(t, e, n, i, u) {
              var a = i(t, e);
              if ('object' != typeof a || null === a) return a;
              if ((u[e.key] || (u[e.key] = {}), !u[e.key][t])) {
                var c = o(a) ? a : r({}, a);
                u[e.key][t] = c;
                var f = e.denormalize(c, n);
                u[e.key][t] = e.EntityClass ? new e.EntityClass(f) : f;
              }
              return 'Object' === u[e.key][t].constructor.name && e.EntityClass
                ? new e.EntityClass(u[e.key][t])
                : u[e.key][t];
            })(i, u, t, n, e)
          : u.denormalize(i, t)
        : (Array.isArray(u) ? p : b)(u, i, t);
    };
  },
  O = function(t) {
    var e = o(t);
    return function(n, r) {
      var i = r.key;
      return 'object' == typeof n ? n : e ? t.getIn([i, n.toString()]) : t[i] && t[i][n];
    };
  },
  S = function(t, e, n) {
    if (void 0 !== t) return j(n)(t, e);
  };
export { S as denormalize, z as normalize, k as schema };
